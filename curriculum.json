{"Curriculum":[
    {"Section Name":"Intro CS",
    "Explanation":"",
    "Subsections":[
            {"Name":"Introduction to Programming",
            "Explanation":"If you've never written a for-loop, or don't know what a string is in programming, start here. Choose one of the two course series below. Either one will give you an introduction to programming that assumes no prior knowledge.\nTrying to decide between them?\n_Python for Everyone_ will introduce you to a popular language and will quickly move to practical programming tasks - using web APIs and databases. This will give you a taste of what many professional developers do.\n_Fundamentals of Computing will also start by introducing you to Python. It then moves on to give an introduction to academic Computer Science topics, like sorting and recursion. This will give you a taste of what the following courses will be like. (Students who complete Fundamentals of Computing can skip Intro to Computer Science and begin Introduction to CS Tools.)_",
            "Topics Covered":[
                {"Name":"simple programs"},
                {"Name":"simple data structures"}
            ],
            "Courses":[
                {"Name":"Python for Everyone",
                "URL":"https://www.py4e.com/",
                "Effort":"58 hours",
                "Prerequisites":"none"}
             ]},
            {"Name":"Introduction to CS Tools",
            "Explanation":"Understanding theory is important, but you will also be expected to create programs. There are a number of tools that are widely used to make that process easier. Learn them now to ease your future work writing programs.",
            "Topics Covered":[
                {"Name":"terminals and shell scripting"},
                {"Name":"vim"},
                {"Name":"command line environments"},
                {"Name":"version control"},
                {"Name":"and more"}
            ],
            "Courses":[
                {"Name":"The Missing Semester of Your CS Education",
                    "URL":"https://missing.csail.mit.edu/",
                    "Duration":"2 weeks",
                    "Effort":"12 hours/week",
                    "Prerequisites":""}
            ]},
             {"Name":"Introduction to Computer Science",
             "Explanation":"This course will introduce you to the world of computer science. Students who have been introduced to programming, either from the courses above or through study elsewhere, should take this course for a flavor of the material to come. If you finish the course wanting more, Computer Science is likely for you!",
             "Topics Covered":[
                 {"Name":"computation"},
                 {"Name":"imperative programming"},
                 {"Name":"basic data structures and algorithms"},
                 {"Name":"and more"}
             ],
             "Courses":[
                 {"Name":"Introduction to Computer Science and Programming using Python",
                 "URL":"https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-10",
                 "Alternative":"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/",
                 "Duration":"9 weeks",
                 "Effort":"15 hours/week",
                 "Prerequisites":"[high school algebra](https://www.khanacademy.org/math/algebra-home)"}
              ]}
        ]
    },
    {"Section Name":"Core CS",
    "Explanation":"All coursework under Core CS is **required**, unless otherwise indicated.",
    "Subsections":[
            {"Name":"Core Programming",
            "Explanation":"The How to Code courses are based on the textbook [How to Design Programs](https://htdp.org/2003-09-26/). The First Edition is available for free online and includes problem sets and solutions. Students are encouraged to do these assignments.",
            "Topics Covered":[
                {"Name":"functional programming"},
                {"Name":"design for testing"},
                {"Name":"program requirements"},
                {"Name":"common design patterns"},
                {"Name":"unit testing"},
                {"Name":"object-oriented design"},
                {"Name":"Java"},
                {"Name":"static typing"},
                {"Name":"dynamic typing"},
                {"Name":"ML-family languages (via Standard ML)"},
                {"Name":"Lisp-family languages (via Racket)"},
                {"Name":"Ruby"},
                {"Name":"and more"}
            ],
            "Courses":[
                {"Name":"How to Code - Simple Data",
                "URL":"https://www.edx.org/course/how-code-simple-data-ubcx-htc1x",
                "Duration":"7 weeks",
                "Effort":"8-10 hours/week",
                "Prerequisites":"none"},
                {"Name":"How to Code - Complex Data",
                "URL":"https://www.edx.org/course/how-code-complex-data-ubcx-htc2x",
                "Duration":"6 weeks",
                "Effort":"8-10 hours/week",
                "Prerequisites":"How to Code: Simple Data"},
                {"Name":"Programming Languages, Part A",
                "URL":"https://www.coursera.org/learn/programming-languages",
                "Duration":"5 weeks",
                "Effort":"4-8 hours/week",
                "Prerequisites":"How to Code ([Hear instructor](https://www.coursera.org/lecture/programming-languages/recommended-background-k1yuh))"},
                {"Name":"Programming Languages, Part B",
                "URL":"https://www.coursera.org/learn/programming-languages-part-b",
                "Duration":"3 weeks",
                "Effort":"4-8 hours/week",
                "Prerequisites":"Programming Languages, Part A"},
                {"Name":"Programming Languages, Part C",
                "URL":"https://www.coursera.org/learn/programming-languages-part-c",
                "Duration":"3 weeks",
                "Effort":"4-8 hours/week",
                "Prerequisites":"Programming Languages, Part B"}
             ]},
             {"Name":"Math Electives",
             "Explanation":"**Students must choose one of the following topics**: calculus, linear algebra, logic, or probability.",
             "Topics Covered":"",
             "Disciplines":[
                 {"Name":"Calculus",
                 "Courses":[
                     {"Name":"Calculus 1A: Differentiation",
                     "URL":"https://www.edx.org/course/calculus-1a-differentiation",
                     "Duration":"13 weeks",
                     "Effort":"6-10 hours/week",
                     "Prerequisites":"high school math"},
                     {"Name":"Calculus 1B: Integration",
                     "URL":"https://www.edx.org/course/calculus-1b-integration",
                     "Duration":"13 weeks",
                     "Effort":"5-10 hours/week",
                     "Prerequisites":"Calculus 1A"},
                     {"Name":"Calculus 1C: Coordinate Systems & Infinite Series",
                     "URL":"https://www.edx.org/course/calculus-1c-coordinate-systems-infinite-series",
                     "Duration":"13 weeks",
                     "Effort":"5-10 hours/week",
                     "Prerequisites":"Calculus 1B"}
                     ]},
                 {"Name":"Linear Algebra",
                 "Courses":[
                     {"Name":"Essence of Linear Algebra",
                     "URL":"https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab",
                     "Duration":" - ",
                     "Effort":" - ",
                     "Prerequisites":"high school math"},
                     {"Name":"Linear Algebra",
                     "URL":"https://ocw.mit.edu/courses/mathematics/18-06sc-linear-algebra-fall-2011/",
                     "Duration":"14 weeks",
                     "Effort":"12 hours/week",
                     "Prerequisites":"Essence of Linear Algebra"}
                     ]},
                 {"Name":"Logic",
                 "Courses":[
                     {"Name":"Introduction to Logic",
                     "URL":"https://www.coursera.org/learn/logic-introduction",
                     "Duration":"10 weeks",
                     "Effort":"4-8 hours/week",
                     "Prerequisites":"[set theory](https://www.youtube.com/playlist?list=PL5KkMZvBpo5AH_5GpxMiryJT6Dkj32H6N)"}
                     ]},
                 {"Name":"Probability",
                 "Courses":[
                     {"Name":"Probability",
                     "URL":"https://projects.iq.harvard.edu/stat110/home",
                     "Duration":"24 weeks",
                     "Effort":"12 hours/week",
                     "Prerequisites":"[Multivariable Calculus](https://ocw.mit.edu/courses/mathematics/18-02sc-multivariable-calculus-fall-2010/index.htm)"}
                     ]}
             ]},
             {"Name":"Math Core",
             "Explanation":"In addition to their math elective, students must complete the following course on discrete mathematics.",
             "Topics Covered":[
                 {"Name":"discrete mathematics"},
                 {"Name":"mathematical proofs"},
                 {"Name":"basic statistics"},
                 {"Name":"O-notation"},
                 {"Name":"discrete probability"},
                 {"Name":"and more"}
             ],
             "Courses":[
                 {"Name":"Mathematics for Computer Science",
                 "URL":"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/index.htm",
                 "Duration":"13 weeks",
                 "Effort":"5 hours/week",
                 "Prerequisites":"Calculus 1C"}
             ],
            "Notes":"An alternate version with solutions to the problem sets is [here](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2005/assignments/). Students struggling can consider the [Discrete Mathematics Specialization](https://www.coursera.org/specializations/discrete-mathematics) first. It is more interactive but less comprehensive, and costs money to unlock full interactivity."},
            {"Name":"Core Systems",
            "Explanation":"",
            "Topics Covered":[
                {"Name":"procedural programming"},
                {"Name":"manual memory management"},
                {"Name":"boolean algebra"},
                {"Name":"gate logic"},
                {"Name":"memory"},
                {"Name":"computer architecture"},
                {"Name":"assembly"},
                {"Name":"machine language"},
                {"Name":"virtual machines"},
                {"Name":"high-level languages"},
                {"Name":"compilers"},
                {"Name":"operating systems"},
                {"Name":"network protocols"},
                {"Name":"and more"}
            ],
            "Courses":[
                {"Name":"Introduction to Computer Science - CS50",
                "URL":"https://www.edx.org/course/introduction-computer-science-harvardx-cs50x#!",
                "Alternative":"https://cs50.harvard.edu/)",
                "Duration":"12 weeks",
                "Effort":"10-20 hours/week",
                "Additional Text / Assignments":"After the sections on C, skip to the next course. [Why?](FAQ.md#why-do-you-recommend-skipping-the-second-half-of-cs50)",
                "Prerequisites":"Introduction to Programming"},
                {"Name":"Build a Modern Computer from First Principles: From Nand to Tetris",
                "URL":"https://www.coursera.org/learn/build-a-computer",
                "Alternative":"http://www.nand2tetris.org/",
                "Duration":"6 weeks",
                "Effort":"7-13 hours/week",
                "Prerequisites":"C-like programming language"},
                {"Name":"Build a Modern Computer from First Principles: Nand to Tetris Part II ",
                "URL":"https://www.coursera.org/learn/nand2tetris2",
                "Duration":"6 weeks",
                "Effort":"12-18 hours/week",
                "Prerequisites":"one of [these programming languages](https://user-images.githubusercontent.com/2046800/35426340-f6ce6358-026a-11e8-8bbb-4e95ac36b1d7.png), From Nand to Tetris Part I"},
                {"Name":"Introduction to Computer Networking",
                "URL":"https://www.youtube.com/playlist?list=PLEAYkSg4uSQ2dr0XO_Nwa5OcdEcaaELSG",
                "Duration":"8 weeks",
                "Effort":"4–12 hours/week",
                "Additional Text / Assignments":"[Assignment 1](https://github.com/PrincetonUniversity/COS461-Public/tree/master/assignments/assignment1)<br>[Assignment 2](https://www.scs.stanford.edu/10au-cs144/lab/reliable/reliable.html)<br>[Assignment 3](https://nptel.ac.in/content/storage2/courses/106105080/pdf/M2L7.pdf)<br>[Assignment 4](http://www-net.cs.umass.edu/wireshark-labs/Wireshark_TCP_v7.0.pdf)",
                "Prerequisites":"algebra, probability, basic CS"},
                {"Name":"Operating Systems: Three Easy Pieces",
                "URL":"http://pages.cs.wisc.edu/~remzi/Classes/537/Spring2018/",
                "Duration":"10-12 weeks",
                "Effort":"6 hours/week",
                "Additional Text / Assignments":"[Homework](http://pages.cs.wisc.edu/~remzi/OSTEP/Homework/homework.html) [Lectures](https://www.youtube.com/channel/UCGweYi6vcfHaTrkap3c1TPg/videos) [Supplement](http://pages.cs.wisc.edu/~shivaram/cs537-sp20/",
                "Prerequisites":"algorithms"}
            ]},
            {"Name":"Core Theory",
            "Explanation":"",
            "Topics Covered":[
                {"Name":"divide and conquer"},
                {"Name":"sorting and searching"},
                {"Name":"randomized algorithms"},
                {"Name":"graph search"},
                {"Name":"shortest paths"},
                {"Name":"data structures"},
                {"Name":"greedy algorithms"},
                {"Name":"minimum spanning trees"},
                {"Name":"dynamic programming"},
                {"Name":"NP-completeness"},
                {"Name":"and more"}
            ],
            "Courses":[
                {"Name":"Divide and Conquer, Sorting and Searching, and Randomized Algorithms",
                "URL":"https://www.coursera.org/learn/algorithms-divide-conquer",
                "Duration":"4 weeks",
                "Effort":"4-8 hours/week",
                "Prerequisites":"any programming language, Mathematics for Computer Science"},
                {"Name":"Graph Search, Shortest Paths, and Data Structures",
                "URL":"https://www.coursera.org/learn/algorithms-graphs-data-structures",
                "Duration":"4 weeks",
                "Effort":"4-8 hours/week",
                "Prerequisites":"Divide and Conquer, Sorting and Searching, and Randomized Algorithms"},
                {"Name":"Greedy Algorithms, Minimum Spanning Trees, and Dynamic Programming",
                "URL":"https://www.coursera.org/learn/algorithms-greedy",
                "Duration":"4 weeks",
                "Effort":"4-8 hours/week",
                "Prerequisites":"Graph Search, Shortest Paths, and Data Structures"},
                {"Name":"Shortest Paths Revisited, NP-Complete Problems and What To Do About Them",
                "URL":"https://www.coursera.org/learn/algorithms-npcomplete",
                "Duration":"4 weeks",
                "Effort":"4-8 hours/week",
                "Prerequisites":"Greedy Algorithms, Minimum Spanning Trees, and Dynamic Programming"}
            ]},
            {"Name":"Core Security",
            "Explanation":"Choose **one** of the last two courses, either _Identifying Security Vulnerabilities in C/C++Programming_ or _Exploiting and Securing Vulnerabilities in Java Applications_ **_Core Security courses are provisionally recommended_**. There is an open [Request For Comment](https://github.com/ossu/computer-science/issues/639) on security course selection. Contributors are encouraged to compare the various courses in the RFC and offer feedback.",
            "Topics Covered":[
                {"Name":"Confidentiality, Integrity, Availability"},
                {"Name":"Secure Design"},
                {"Name":"Defensive Programming"},
                {"Name":"Threats and Attacks"},
                {"Name":"Network Security"},
                {"Name":"Cryptography"},
                {"Name":"and more"}
            ],
            "Courses":[
                {"Name":"Information Security: Context and Introduction",
                    "URL":"https://www.coursera.org/learn/information-security-data",
                    "Duration":"5 weeks",
                    "Effort":"3 hours/week",
                    "Prerequisites":""},
                {"Name":"Principles of Secure Coding",
                    "URL":"https://www.coursera.org/learn/secure-coding-principles",
                    "Duration":"4 weeks",
                    "Effort":"4 hours/week",
                    "Prerequisites":""},
                {"Name":"Identifying Security Vulnerabilities",
                    "URL":"https://www.coursera.org/learn/identifying-security-vulnerabilities",
                    "Duration":"4 weeks",
                    "Effort":"4 hours/week",
                    "Prerequisites":""},
                {"Name":"Identifying Security Vulnerabilities in C/C++Programming",
                    "URL":"https://www.coursera.org/learn/identifying-security-vulnerabilities-c-programming",
                    "Duration":"4 weeks",
                    "Effort":"5 hours/week",
                    "Prerequisites":""},
                {"Name":"Exploiting and Securing Vulnerabilities in Java Applications",
                    "URL":"https://www.coursera.org/learn/exploiting-securing-vulnerabilities-java-applications",
                    "Duration":"4 weeks",
                    "Effort":"5 hours/week",
                    "Prerequisites":""}
            ]},
            {"Name":"Core Applications",
            "Explanation":"",
            "Topics Covered":[
                {"Name":"Agile methodology"},
                {"Name":"REST"},
                {"Name":"software specifications"},
                {"Name":"refactoring"},
                {"Name":"relational databases"},
                {"Name":"transaction processing"},
                {"Name":"data modeling"},
                {"Name":"neural networks"},
                {"Name":"supervised learning"},
                {"Name":"unsupervised learning"},
                {"Name":"OpenGL"},
                {"Name":"raytracing"},
                {"Name":"and more"}
            ],
            "Courses":[
                {"Name":"Relational Database Systems",
                "URL":"https://www.coursera.org/learn/relational-database)| 6 weeks | 3 hours/week",
                "Prerequisites":"-"},
                {"Name":"Machine Learning",
                "URL":"https://www.coursera.org/learn/machine-learning)| 11 weeks | 4-6 hours/week",
                "Prerequisites":"linear algebra"},
                {"Name":"Computer Graphics",
                "URL":"https://www.edx.org/course/computer-graphics-uc-san-diegox-cse167x)| 6 weeks | 12 hours/week",
                "Prerequisites":"C++ or Java, linear algebra"},
                {"Name":"Software Engineering: Introduction",
                "URL":"https://www.edx.org/course/software-engineering-introduction-ubcx-softeng1x",
                "Duration":"6 weeks",
                "Effort":"8-10 hours/week",
                "Prerequisites":"Core Programming, and a [sizable project](FAQ.md#why-require-experience-with-a-sizable-project-before-the-Software-Engineering-courses)"},
                {"Name":"Software Development Capstone Project",
                "URL":"https://www.edx.org/course/software-development-capstone-project-ubcx-softengprjx",
                "Duration":"6-7 weeks",
                "Effort":"8-10 hours/week",
                "Prerequisites":"Software Engineering: Introduction"}
            ]}
        ]
    },
    {"Section Name":"Advanced CS",
    "Explanation":"After completing **every required course** in Core CS, students should choose a subset of courses from Advanced CS based on interest. Not every course from a subcategory needs to be taken. But students should take *every* course that is relevant to the field they intend to go into.\nThe Advanced CS study should then end with one of the Specializations under [Advanced applications](#advanced-applications). A Specialization's Capstone, if taken, may act as the [Final project](#final-project), if permitted by the Honor Code of the course. If not, or if a student chooses not to take the Capstone, then a separate Final project will need to be done to complete this curriculum.",
    "Subsections":[
        {"Name":"Advanced Programming",
        "Topics Covered":[
            {"Name":"debugging theory and practice"},
            {"Name":"goal-oriented programming"},
            {"Name":"GPU programming"},
            {"Name":"CUDA"},
            {"Name":"parallel computing"},
            {"Name":"object-oriented analysis and design"},
            {"Name":"UML"},
            {"Name":"large-scale software architecture and design"},
            {"Name":"and more"}
        ],
        "Courses":[
            {"Name":"Parallel Programming",
            "URL":"https://www.coursera.org/learn/parprog1",
            "Duration":"4 weeks",
            "Effort":" 6-8 hours/week ",
            "Prerequisites":"Scala Programming"},
            {"Name":"Compilers",
            "URL":"https://www.edx.org/course/compilers",
            "Alternative":"https://www.youtube.com/playlist?list=PLDcmCgguL9rxPoVn2ykUFc8TOpLyDU5gx",
            "Duration":"9 weeks",
            "Effort":"6-8 hours/week",
            "Prerequisites":"none"},
            {"Name":"Introduction to Haskell",
            "URL":"https://www.seas.upenn.edu/~cis194/fall16/",
            "Duration":"14 weeks",
            "Prerequisites":""},
            {"Name":"Learn Prolog Now!",
            "URL":"http://lpn.swi-prolog.org/lpnpage.php?pageid=top",
            "Duration":"12 weeks",
            "Prerequisites":""},
            {"Name":"Software Debugging",
            "URL":"https://www.udacity.com/course/software-debugging--cs259",
            "Duration":"8 weeks",
            "Effort":"6 hours/week",
            "Prerequisites":"Python, object-oriented programming"},
            {"Name":"Software Testing",
            "URL":"https://www.udacity.com/course/software-testing--cs258",
            "Duration":"4 weeks",
            "Effort":"6 hours/week",
            "Prerequisites":"Python, programming experience"},
            {"Name":"Software Architecture & Design",
            "URL":"https://www.udacity.com/course/software-architecture-design--ud821",
            "Duration":"8 weeks",
            "Effort":"6 hours/week",
            "Prerequisites":"software engineering in Java"}
        ]},
        {"Name":"Advanced Systems",
        "Explanation":"",
        "Topics Covered":[
            {"Name":"digital signaling"},
            {"Name":"combinational logic"},
            {"Name":"CMOS technologies"},
            {"Name":"sequential logic"},
            {"Name":"finite state machines"},
            {"Name":"processor instruction sets"},
            {"Name":"caches"},
            {"Name":"pipelining"},
            {"Name":"virtualization"},
            {"Name":"parallel processing"},
            {"Name":"virtual memory"},
            {"Name":"synchronization primitives"},
            {"Name":"system call interface"},
            {"Name":"and more"}
        ],
        "Courses":[
            {"Name":"Computation Structures 1: Digital Circuits",
            "URL":"https://www.edx.org/course/computation-structures-part-1-digital-mitx-6-004-1x-0",
            "Duration":"10 weeks",
            "Effort":"6 hours/week",
            "Prerequisites":"Nand2Tetris II"},
            {"Name":"Computation Structures 2: Computer Architecture",
            "URL":"https://www.edx.org/course/computation-structures-2-computer-mitx-6-004-2x",
            "Duration":"10 weeks",
            "Effort":"6 hours/week",
            "Prerequisites":"Computation Structures 1"},
            {"Name":"Computation Structures 3: Computer Organization",
            "URL":"https://www.edx.org/course/computation-structures-3-computer-mitx-6-004-3x-0",
            "Duration":"10 weeks",
            "Effort":"6 hours/week",
            "Prerequisites":"Computation Structures 2"}
        ],
        "Notes":"These courses assume knowledge of basic physics. ([Why?](FAQ.md#why-is-the-curriculum-missing-some-pre-requisites)) If you are struggling, you can find a physics MOOC or utilize the materials from Khan Academy: [Khan Academy - Physics](https://www.khanacademy.org/science/physics)"},
        {"Name":"Advanced Theory",
        "Explanation":"",
        "Topics Covered":[
            {"Name":"formal languages"},
            {"Name":"Turing machines"},
            {"Name":"computability"},
            {"Name":"event-driven concurrency"},
            {"Name":"automata"},
            {"Name":"distributed shared memory"},
            {"Name":"consensus algorithms"},
            {"Name":"state machine replication"},
            {"Name":"computational geometry theory"},
            {"Name":"propositional logic"},
            {"Name":"relational logic"},
            {"Name":"Herbrand logic"},
            {"Name":"concept lattices"},
            {"Name":"game trees"},
            {"Name":"and more"}
        ],
        "Courses":[
            {"Name":"Theory of Computation",
            "URL":"http://aduni.org/courses/theory/index.php?view=cw",
            "Alternative":"https://www.youtube.com/playlist?list=PLTke5lHMAdSNmi57H0DOTzClHPK6UwSTN",
            "Duration":"8 weeks",
            "Effort":"10 hours/week",
            "Prerequisites":"discrete mathematics, logic, algorithms"},
            {"Name":"Computational Geometry",
            "URL":"https://www.edx.org/course/computational-geometry-tsinghuax-70240183x",
            "Duration":"16 weeks",
            "Effort":"8 hours/week",
            "Prerequisites":"algorithms, C++"},
            {"Name":"Introduction to Formal Concept Analysis",
            "URL":"https://www.coursera.org/learn/formal-concept-analysis",
            "Duration":"6 weeks",
            "Effort":"4-6 hours/week",
            "Prerequisites":"logic, probability"},
            {"Name":"Game Theory",
            "URL":"https://www.coursera.org/learn/game-theory-1",
            "Duration":"8 weeks",
            "Effort":"3 hours/week",
            "Prerequisites":"mathematical thinking, probability, calculus"}
        ]},
        {"Name":"Core Systems",
        "Explanation":"These Coursera Specializations all end with a Capstone project. Depending on the course, you may be able to utilize the Capstone as your Final Project for this Computer Science curriculum. Note that doing a Specialization with the Capstone at the end always costs money. So if you don't wish to spend money or use the Capstone as your Final, it may be possible to take the courses in the Specialization for free by manually searching for them, but not all allow this.",
        "Topics Covered":"",
        "Courses":[
            {"Name":"Modern Robotics (Specialization)",
            "URL":"https://www.coursera.org/specializations/modernrobotics",
            "Duration":"26 weeks",
            "Effort":"2-5 hours/week",
            "Prerequisites":"freshman-level physics, linear algebra, calculus, [linear ordinary differential equations](https://www.khanacademy.org/math/differential-equations)"},
            {"Name":"Data Mining (Specialization)",
            "URL":"https://www.coursera.org/specializations/data-mining",
            "Duration":"30 weeks",
            "Effort":"2-5 hours/week",
            "Prerequisites":"machine learning"},
            {"Name":"Big Data (Specialization)",
            "URL":"https://www.coursera.org/specializations/big-data",
            "Duration":"30 weeks",
            "Effort":"3-5 hours/week",
            "Prerequisites":"none"},
            {"Name":"Internet of Things (Specialization)",
            "URL":"https://www.coursera.org/specializations/internet-of-things",
            "Duration":"30 weeks",
            "Effort":"1-5 hours/week",
            "Prerequisites":"strong programming"},
            {"Name":"Cloud Computing (Specialization)",
            "URL":"https://www.coursera.org/specializations/cloud-computing",
            "Duration":"30 weeks",
            "Effort":"2-6 hours/week",
            "Prerequisites":"C++ programming"},
            {"Name":"Fullstack Open",
            "URL":"https://fullstackopen.com/en",
            "Duration":"12 weeks",
            "Effort":"6 hours/week",
            "Prerequisites":"programming, databases"},
            {"Name":"Data Science (Specialization)",
            "URL":"https://www.coursera.org/specializations/jhu-data-science",
            "Duration":"43 weeks",
            "Effort":"1-6 hours/week",
            "Prerequisites":"none"},
            {"Name":"Functional Programming in Scala (Specialization)",
            "URL":"https://www.coursera.org/specializations/scala",
            "Duration":"29 weeks",
            "Effort":"4-5 hours/week",
            "Prerequisites":"One year programming experience"},
            {"Name":"Game Design and Development (Specialization)",
            "URL":"https://www.coursera.org/specializations/game-development",
            "Duration":"6 months",
            "Effort":"5 hours/week",
            "Prerequisites":"programming, interactive design"}
        ]}
    ]}
]}
